<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Graphic Design on Zach Marino</title>
        <link>https://zmarino.com/tags/graphic-design/</link>
        <description>Recent content in Graphic Design on Zach Marino</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 15 Aug 2024 17:16:35 -0400</lastBuildDate><atom:link href="https://zmarino.com/tags/graphic-design/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>TalentTrace</title>
        <link>https://zmarino.com/posts/talenttrace/</link>
        <pubDate>Thu, 15 Aug 2024 17:16:35 -0400</pubDate>
        
        <guid>https://zmarino.com/posts/talenttrace/</guid>
        <description>&lt;img src="https://zmarino.com/posts/talenttrace/TalentTrace.png" alt="Featured image of post TalentTrace" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;TalentTrace is a job tracker and aggregate job data app that my group and I created for our final project in CS3200 Database Design. Users can add jobs entries to TalentTrace and see all of their applications at a glance. They can also see aggregate data from all job entries to see and analyze market trends. Recruiters can use TalentTrace to keep track of applicants and any interviews they have with them. The project repository can be found on my github or by clicking the button below.&lt;/p&gt;

&lt;a href=&#34;https://github.com/zachmarino234/TalentTrace&#34; class=&#34;btn btn-primary&#34; target=&#34;_blank&#34;&gt;
    Repository
&lt;/a&gt;
  
&lt;h2 id=&#34;tech-stack&#34;&gt;Tech Stack
&lt;/h2&gt;&lt;p&gt;Our tech stack consists of MySQL for the database, Flask for the backend, and Streamlit for the frontend. This stack was provided to us in a template created by our professor that we forked. Each tier was containerized using docker. While DevOps was not the focus of this project, since finishing this project I have investigated and learned how to setup a similar tech stack and containerize every tier.&lt;/p&gt;
&lt;h3 id=&#34;database&#34;&gt;Database
&lt;/h3&gt;&lt;p&gt;Our database is coded in MySQL and contains a DDL file as well as several files housing mock data generated by &lt;a class=&#34;link&#34; href=&#34;https://www.mockaroo.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mockaroo&lt;/a&gt;. Before coding the database files, we first did a very basic design iteration and identified our users and their needs. We then took those needs and translated them into a large Entity-Relationship diagram.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zmarino.com/posts/talenttrace/ER-diagram.webp&#34;
	width=&#34;9120&#34;
	height=&#34;3168&#34;
	srcset=&#34;https://zmarino.com/posts/talenttrace/ER-diagram_hu10766316028567349892.webp 480w, https://zmarino.com/posts/talenttrace/ER-diagram_hu17367962809626122217.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Entity-Relationship Diagram (Click on image for better quality)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;287&#34;
		data-flex-basis=&#34;690px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;With the diagram ready to go, we translated it into a DDL file which was set to run every time the MySQL docker container was spun up using &lt;code&gt;docker compose up db&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;backend-api&#34;&gt;Backend API
&lt;/h3&gt;&lt;p&gt;We built our API using Flask. Our professor provided the template for the project so all setup was done for us, we just needed to create routes and blueprints to connect the database to the frontend. We created a blueprint for each entity that required a route like job entries, users, etc. We also had a route for all of our aggregate queries. An alternative method to connect the database to the frontend would have been to create a couple of large routes and running any specific queries in the frontend using pandas but that would have bad practice. It is better to keep the database and frontend as separate as possible, and it was easier to just create extra routes or abstract already made routes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zmarino.com/posts/talenttrace/backend.png&#34;
	width=&#34;1262&#34;
	height=&#34;670&#34;
	srcset=&#34;https://zmarino.com/posts/talenttrace/backend_hu9941428779200126990.png 480w, https://zmarino.com/posts/talenttrace/backend_hu13926516439020606257.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Example of a GET route for the aggregate data page&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;frontend&#34;&gt;Frontend
&lt;/h3&gt;&lt;p&gt;Our frontend was built with Streamlit, a data visualization tool written in python. Streamlit was not built to run an application like our project, but the focus of the class was not on front-end development and Streamlit was easy to pick up as everything is prebuilt. We mocked user authentication using buttons and session states and created flows for each persona. Each persona needed to have a GET, PUT, POST, and DELETE route. Our project was not graded on UX or visual design, but considering my skillset, I wanted to add some design elements to make sure our app felt good to use despite the limited framework. We added confirmation messages to any forms, downloaded more advanced data viz frameworks to better display the data, and I created a logo to add an extra touch of cohesiveness to our project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zmarino.com/posts/talenttrace/frontend.png&#34;
	width=&#34;3024&#34;
	height=&#34;1594&#34;
	srcset=&#34;https://zmarino.com/posts/talenttrace/frontend_hu14423125621602959699.png 480w, https://zmarino.com/posts/talenttrace/frontend_hu14148629253610771638.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Aggregate job data page from the system administrator persona&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;189&#34;
		data-flex-basis=&#34;455px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;logo&#34;&gt;Logo
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://zmarino.com/posts/talenttrace/logo.svg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;TalentTrace logo designed by me&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t want to spend too much time with the logo as it did not impact our grade but I still wanted to make something interesting (or at least better than the AI generated logos other teams were using). The &amp;ldquo;trace&amp;rdquo; in TalentTrace reminded me of a light/spotlight which is represented by the yellow streak that runs through the two T&amp;rsquo;s. The blue was chosen because it complemented well with the yellow when I was picking colors. The geometric look was used because we felt it looked professional without being generic.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;Prior to this class, my last computer science class was Algorithms which really killed a lot of my interest in computer science. This project brought my enthusiasm back. It was incredibly fun learning how to bring all of these different parts of software engineering together into a cohesive product. I feel like I finally see the full picture in regards to what I&amp;rsquo;ve been learning and it also made me realize I don&amp;rsquo;t want to do &lt;em&gt;just&lt;/em&gt; design or computer science, I want to do both. I still find backend development (specifically algorithms) intimidating but I didn&amp;rsquo;t expect to enjoy databases as much as I did.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Alloc8 - Personal Finance Project</title>
        <link>https://zmarino.com/posts/alloc8/</link>
        <pubDate>Fri, 01 Dec 2023 17:16:35 -0400</pubDate>
        
        <guid>https://zmarino.com/posts/alloc8/</guid>
        <description>&lt;img src="https://zmarino.com/posts/alloc8/Alloc8%20logo.png" alt="Featured image of post Alloc8 - Personal Finance Project" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;Alloc8 is a personal finance app that I created in ARTG 2400 Interaction Design Principles, taught by Professor Sofie Hodara, for my final project. We started in small groups and did user research together, interviewing our friends and family about their personal finance habits. From these user interviews we developed an idea of what users wanted from a personal finance app, and created our own seperate prodicts to solve this design issue. I ended up on a personal finance app that automatically allocates your paycheck into rent, budgets, spending goals, etc. as decided by the user, and the extra money left over can be used to either temporarily increase budgets or add to other goals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To see the detailed design doc click the button below.&lt;/strong&gt; ⬇️&lt;/p&gt;

&lt;a href=&#34;Alloc8-Process-Portfolio.pdf&#34; class=&#34;btn btn-primary&#34; target=&#34;_blank&#34;&gt;
    Design Doc
&lt;/a&gt;
  
</description>
        </item>
        <item>
        <title>Where did all of the Serif Typefaces Go?</title>
        <link>https://zmarino.com/posts/where-did-all-the-serif-typefaces-go/</link>
        <pubDate>Thu, 01 Jun 2023 17:16:35 -0400</pubDate>
        
        <guid>https://zmarino.com/posts/where-did-all-the-serif-typefaces-go/</guid>
        <description>&lt;img src="https://zmarino.com/posts/where-did-all-the-serif-typefaces-go/Stripes.png" alt="Featured image of post Where did all of the Serif Typefaces Go?" /&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;Stripes is the name of the first project I completed in Design Perspectives (ARTG1001) taught by Northeastern Professor Lee Moreau during the Fall 2023 semester. The goal of this project was to document when/where you see some chosen design element or motif, and create an infographic showcasing them. I decided on serif typefaces as my &amp;ldquo;stripes&amp;rdquo; and walked through Boston looking for any serif typefaces. Unfortunately, I found little to none. I decided instead of throwing in the towel and picking a different topic, I decided to approach this from the other end: &amp;ldquo;Where did all of the serif typefaces go?&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;infographic-design&#34;&gt;Infographic Design
&lt;/h2&gt;&lt;p&gt;Serif typefaces give off a sense of credibility, opulence, and history. Considering these themes, I wanted my infographic to feel similarly luxiorious. However, considering I am framing this infographic as an investigation, I wanted to give this infographic the feeling of an investigative journalist reporting their findings. What I ended up with is a nice mixture of both.&lt;/p&gt;
&lt;p&gt;The pink accent color was chosen because it was a less saturated pink that made it feel similar to rose gold. The offset boxes highlighting important words was added to emulate the (stereotypically) sloppy highlighting of a reporter. I learned in my typography class this semester that it often works to pair a serif typeface with a sans-serif one so I decided to try that on this infographic.&lt;/p&gt;
&lt;p&gt;At least from my experience, a lot of &amp;ldquo;luxury&amp;rdquo; brands and products incorporate very provocative typography into their branding so I tried to mirror this with the large pink type in the background.&lt;/p&gt;
&lt;p&gt;The typefaces I used, Essonnes and Poppins, were chosen because they fit together aesthetically and my only criteria was pairing a serif and sans-serif typeface together.&lt;/p&gt;
&lt;h2 id=&#34;view-project&#34;&gt;View Project
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;To see the infographic click the button below.&lt;/strong&gt; ⬇️&lt;/p&gt;

&lt;a href=&#34;stripes.pdf&#34; class=&#34;btn btn-primary&#34; target=&#34;_blank&#34;&gt;
    View Infographic
&lt;/a&gt;
  
</description>
        </item>
        <item>
        <title>Two Designer Timeline</title>
        <link>https://zmarino.com/posts/two-designer-timeline/</link>
        <pubDate>Fri, 05 May 2023 17:16:35 -0400</pubDate>
        
        <guid>https://zmarino.com/posts/two-designer-timeline/</guid>
        <description>&lt;img src="https://zmarino.com/posts/two-designer-timeline/2DT.png" alt="Featured image of post Two Designer Timeline" /&gt;
&lt;a href=&#34;Two-Designer-Timeline.pdf&#34; class=&#34;btn btn-primary&#34; target=&#34;_blank&#34;&gt;
    View the Timeline
&lt;/a&gt;
  
&lt;h2 id=&#34;introduction&#34;&gt;Introduction
&lt;/h2&gt;&lt;p&gt;The Two Designer Timeline was my final project for ARTH2215 Graphic Design History, where I had to create a timeline documenting the life of two seperate designers in an accordion-style booklet.&lt;/p&gt;
&lt;h2 id=&#34;designers&#34;&gt;Designers
&lt;/h2&gt;&lt;p&gt;The two designers I decided to research were Raymond Loewy and Carin Goldberg. Raymond Loewy is known for being the progenitor of Streamlining, and creating the streamlined and futuristic look we associate with the 1940s-60s. Carin Goldberg was an accomplished graphic designer who designed the cover for Madonna&amp;rsquo;s iconic self-titled album and the covers for many books and magazines. She sadly passed away shortly before I started working on this project from a brain tumor.&lt;/p&gt;
&lt;h2 id=&#34;timeline-design&#34;&gt;Timeline Design
&lt;/h2&gt;&lt;p&gt;The design of the timeline, while simple, conveys a lot of meaning. Following Loewys streamlining and Goldbergs simplified shapes and creative use of typography, I kept the timeline simple yet dynamic so that it is easy to read yet interesting stylistically. Besides the background, only three colors are used and they represent which events correspond to which designer or a general world event. This design language is kept consistent throughout to further ensure legibility for readers.&lt;/p&gt;
&lt;p&gt;One of my biggest struggles on this project (besides the initial artists block) was how I laid out each page. I was cramming too much into each page so the layouts felt cramped and rigid. This is still something I am actively working on as a designer, but on this project I realized this issue on my first iteration of what would be the final draft and gave my elements some breathing room in later iterations.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zmarino.com/posts/two-designer-timeline/2DT-old-example.png&#34;
	width=&#34;4380&#34;
	height=&#34;3286&#34;
	srcset=&#34;https://zmarino.com/posts/two-designer-timeline/2DT-old-example_hu12298975074249064036.png 480w, https://zmarino.com/posts/two-designer-timeline/2DT-old-example_hu3105550847671314470.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Old Cramped Layout&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zmarino.com/posts/two-designer-timeline/2DT-new-example.png&#34;
	width=&#34;4380&#34;
	height=&#34;3286&#34;
	srcset=&#34;https://zmarino.com/posts/two-designer-timeline/2DT-new-example_hu14658014747649385066.png 480w, https://zmarino.com/posts/two-designer-timeline/2DT-new-example_hu14971808811838690699.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;New Spaced-Out Layout&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;view-project&#34;&gt;View Project
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;To view the timeline, click the button below.&lt;/strong&gt; ⬇️&lt;/p&gt;

&lt;a href=&#34;Two-Designer-Timeline.pdf&#34; class=&#34;btn btn-primary&#34; target=&#34;_blank&#34;&gt;
    Timeline
&lt;/a&gt;
  
</description>
        </item>
        
    </channel>
</rss>
